:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  /* overflow-y: hidden; */
}

body {
  height: 200dvh;
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

.box {
  height: 800px;
  width: 800px;
  background-color: red;
}

.glass {
  background: rgba(255, 255, 255, 0.14);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(9px);
  -webkit-backdrop-filter: blur(9px);
  border: 1px solid rgba(255, 255, 255, 0.62);
}

.keyboard {
  position: fixed;
  z-index: 100;
  bottom: 10px;
  left: calc(50% - 85px);
  display: grid;
  grid-template-columns: repeat(3, 50px);
  grid-template-rows: repeat(2, 50px);
  grid-gap: 6px;
  transition: bottom .3s;
}

.keyboard .up,
.keyboard .left,
.keyboard .down,
.keyboard .right {
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translate3d(0, -150px, 0);
  transition: transform .3s ease-in;
}

.keyboard.normal .up,
.keyboard.normal .left,
.keyboard.normal .down,
.keyboard.normal .right {
  transform: translate3d(0, 0, 0);
}

.keyboard .up {
  grid-column: 2;
  grid-row: 1;
  transition-delay: .07s;
}
.keyboard .left {
  grid-column: 1;
  grid-row: 2;
  transition-delay: .05s;
}
.keyboard .down {
  grid-column: 2;
  grid-row: 2;
  transition-delay: 0;
}
.keyboard .right {
  grid-column: 3;
  grid-row: 2;
  transition-delay: .05s;
}

.keyboard .up svg,
.keyboard .left svg,
.keyboard .down svg,
.keyboard .right svg {
  height: 12px;
  width: auto;
  transition: fill .3s;
}

.keyboard .up.active svg,
.keyboard .left.active svg,
.keyboard .down.active svg,
.keyboard .right.active svg {
  fill: white;
}

.shortcuts {
  position: fixed;
  display: flex;
  flex-direction: column;
  gap: 6px;
  left: 12px;
  top: 50%;
  transform: translate3d(0, -50%, 0);
}

.shortcuts .link {
  height: 50px;
  width: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.shortcuts .link svg {
  height: 12px;
  width: auto;
  transition: fill .3s;
}

 .tooltip {
/*  width: 100%;
  height: 100%;
  pointer-events: none;
  background-color: transparent; */
  position: relative;
}

.tooltip .tooltip-text {
  pointer-events: none;
  position: absolute;
  padding: 12px;
  transform-origin: center;
  transition: opacity .3s, scale .3s;
}

.tooltip-text.disabled {
  opacity: 0;
  /* scale: .6; */
}

.tooltip.tooltip--top .tooltip-text {
  top: 0;
  left: 50%;
  transform: translate3d(-50%, calc(-100% - 12px), 0);
}

.tooltip.tooltip--right .tooltip-text {
  right: 0;
  top: 50%;
  transform: translate3d( calc(100% + 12px), -50%, 0);
  margin-left: 12px;
}

.tooltip.tooltip--left .tooltip-text {
  left: 0;
  top: 50%;
  transform: translate3d(calc(-100% - 12px),  -50%, 0);
  margin-right: 12px;
}

.tooltip.tooltip--bottom .tooltip-text {
  bottom: 0;
  left: 50%;
  transform: translate3d(-50%, calc(100% + 12px), 0);
}

.modal {
  position: fixed;
  inset: 0;
  padding: 15dvh 5%;
  transition: opacity .3s;
  pointer-events: none;
}

.modal.disabled {
  opacity: 0;
}

.modal-content {
  height: 100%;
  width: 100%;
  color: white;
  padding: 10px;
  max-width: 1000px;
  margin-left: auto;
  margin-right: auto;
  transition: transform .3s;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.modal.disabled .modal-content {
  transform: translate3d(0, 20%, 0);
}

.modal-content p {
  font-size: 20px;
}

.modal-content p:nth-of-type(1) {
  margin-bottom: 12px;
  font-size: 32px;
  text-transform: uppercase;
}

.modal-outer {
  background-color: rgba(100, 65, 164, .3);
  position: absolute;
  inset: 0;
  z-index: -1;
  backdrop-filter: blur(100px);
}

canvas {
  position: fixed;
  top: 0;
  pointer-events: none;
  z-index: -10;
  filter: blur(100px);
  opacity: 0;
}

canvas.yes {
  animation: canvasAppearance 3s linear forwards;
}

@keyframes canvasAppearance {
  from {opacity: 0;}
  to {opacity: 1;}
}